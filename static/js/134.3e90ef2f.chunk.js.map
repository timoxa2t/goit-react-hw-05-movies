{"version":3,"file":"static/js/134.3e90ef2f.chunk.js","mappings":"oOAMe,SAASA,IAEpB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAeA,OATAC,EAAAA,EAAAA,YAAU,WACFJ,IACJK,QAAQC,IAAIN,IACZO,EAAAA,EAAAA,IAAaP,GACZQ,MAAK,YAAgB,IAAdC,EAAa,EAAbA,QACLN,EAAUM,EACZ,IACJ,GAAE,CAACT,KAGA,4BACI,kBAAMU,SAhBO,SAACC,GAClBA,EAAIC,iBACJX,EAAcU,EAAIE,OAAO,GAAGC,MAC/B,EAaO,WACI,kBAAOC,QAAQ,kBACf,kBAAOC,GAAG,kBACV,mBAAQC,KAAK,SAAb,gDAEJ,wBACCf,EAAOgB,KAAI,gBAAEF,EAAF,EAAEA,GAAIG,EAAN,EAAMA,MAAN,OACJ,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAb,SACKG,KAFAH,EADL,QAUvB,C,sBC1Cc,SAASK,EAAgBC,EAAKC,EAAKT,GAYhD,OAXIS,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BT,MAAOA,EACPY,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOT,EAGNQ,CACT,CCXA,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CAEA,OAAOF,CACT,CAEe,SAASQ,EAAe3B,GACrC,IAAK,IAAI4B,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIZ,EAAQL,OAAOoB,IAAS,GAAIC,SAAQ,SAAUtB,GACpD,EAAeV,EAAQU,EAAKqB,EAAOrB,GACrC,IAAKC,OAAOsB,0BAA4BtB,OAAOuB,iBAAiBlC,EAAQW,OAAOsB,0BAA0BF,IAAWf,EAAQL,OAAOoB,IAASC,SAAQ,SAAUtB,GAC5JC,OAAOC,eAAeZ,EAAQU,EAAKC,OAAOa,yBAAyBO,EAAQrB,GAC7E,GACF,CAEA,OAAOV,CACT,C,iICzBA,IAAMmC,EAAU,gCAEZC,EAAa,QAEXC,EAAgB,CAClBC,QAAS,mCACTC,SAAU,MAId,SAASC,EAAYC,GAAmB,IAAbC,EAAY,uDAAH,CAAC,EAC3BC,EAAY,IAAIC,gBAAJ,OAAwBP,GAAkBK,IAE5D,OAAOG,MAAM,GAAD,OAAIV,GAAJ,OAAcM,EAAd,YAAsBE,IACjChD,MAAK,SAAAmD,GAAG,OAAIA,EAAIC,MAAR,IACRC,OAAM,SAAAC,GAAG,OAAIA,CAAJ,GACb,CAED,SAASC,IAA6B,IAAnBC,EAAkB,uDAAN,MAC3B,OAAOX,EAAY,YAAD,OAAaJ,EAAb,YAA2Be,GAChD,CAED,SAASC,EAAaC,GAClB,OAAOb,EAAY,SAAD,OAAUa,GAC/B,CAED,SAASC,EAAiBD,GACtB,OAAOb,EAAY,SAAD,OAAUa,EAAV,YACrB,CAED,SAASE,EAAoBF,GACzB,OAAOb,EAAY,SAAD,OAAUa,EAAV,YACrB,CAED,SAAS3D,EAAa8D,GAClB,OAAOhB,EAAY,eAAgB,CAACgB,MAAAA,GACvC,C","sources":["pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","services/theMovieDbApi.js"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { searchMovies } from \"services/theMovieDbApi\"\nimport { Link } from \"react-router-dom\";\n\n\nexport default function Movies(){\n    \n    const [searchText, setSearchText] = useState(\"\")\n    const [movies, setMovies] = useState([])\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        setSearchText(evt.target[0].value)\n    }\n\n    useEffect(() => {\n        if(!searchText) return\n        console.log(searchText)\n        searchMovies(searchText)\n        .then(({results}) => {\n           setMovies(results)     \n        })\n    }, [searchText])\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"search_query\"></label>\n                <input id=\"search_query\"/> \n                <button type=\"submit\">Пошук</button>\n            </form>\n            <ul>\n            {movies.map(({id, title}) => \n                    <li key={id}>\n                        <Link to={`${id}`}>\n                            {title}\n                        </Link>   \n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","\nconst baseURL = \"https://api.themoviedb.org/3/\"\n\nlet media_type = \"movie\"\n\nconst defaultParams = {\n    api_key: \"37055092bc16af00ecdaade257ad346c\",\n    language: \"ua\"\n}\n\n\nfunction sendRequest(path, params = {}){\n    const urlParams = new URLSearchParams({...defaultParams, ...params}) \n\n    return fetch(`${baseURL}${path}?${urlParams}`)\n    .then(res => res.json())\n    .catch(err => err)\n}\n\nfunction getTrends(time_window=\"day\"){\n    return sendRequest(`trending/${media_type}/${time_window}`)\n}\n\nfunction getMovieById(movie_id){\n    return sendRequest(`movie/${movie_id}`)\n}\n\nfunction getMovieCastById(movie_id){\n    return sendRequest(`movie/${movie_id}/credits`)\n}\n\nfunction getMovieReviewsById(movie_id){\n    return sendRequest(`movie/${movie_id}/reviews`)\n}\n\nfunction searchMovies(query){\n    return sendRequest(`search/movie`, {query})\n}\n\nexport {getTrends, getMovieById, searchMovies, getMovieCastById, getMovieReviewsById}"],"names":["Movies","useState","searchText","setSearchText","movies","setMovies","useEffect","console","log","searchMovies","then","results","onSubmit","evt","preventDefault","target","value","htmlFor","id","type","map","title","to","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","baseURL","media_type","defaultParams","api_key","language","sendRequest","path","params","urlParams","URLSearchParams","fetch","res","json","catch","err","getTrends","time_window","getMovieById","movie_id","getMovieCastById","getMovieReviewsById","query"],"sourceRoot":""}